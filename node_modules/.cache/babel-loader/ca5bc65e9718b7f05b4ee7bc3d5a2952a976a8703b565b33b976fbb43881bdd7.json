{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { getClientById, updateClient } from '../services/clientService';\nimport { getClientDocuments } from '../services/documentService';\n\n// Interface for documents that have been stored (don't have file object)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\nconst EditClient = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [client, setClient] = useState(null);\n  const [existingDocuments, setExistingDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingDocuments, setLoadingDocuments] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n      fetchClientDocuments(id);\n    }\n  }, [id]);\n  const fetchClientData = async clientId => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchClientDocuments = async clientId => {\n    try {\n      setLoadingDocuments(true);\n      console.log(`Fetching documents for client ${clientId}`);\n      const documentsData = await getClientDocuments(clientId);\n      console.log('Documents retrieved:', documentsData);\n\n      // Convert server documents to StoredDocument format\n      const storedDocuments = documentsData.map(doc => ({\n        id: doc.id,\n        name: doc.file_name || '',\n        category: doc.category || '',\n        url: doc.file_path\n      }));\n      setExistingDocuments(storedDocuments);\n    } catch (err) {\n      console.error('Error fetching client documents:', err);\n      // Don't show error to user - just log it\n    } finally {\n      setLoadingDocuments(false);\n    }\n  };\n  const handleSubmit = async (data, uploadDocuments) => {\n    if (!id) return;\n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n\n      // First save the client data with documents\n      console.log('Updating client data with documents...', data);\n      console.log('Documents to upload:', uploadDocuments.length);\n      const updatedClient = await updateClient(id, data, uploadDocuments, user === null || user === void 0 ? void 0 : user.id);\n      console.log('Client data successfully updated', updatedClient);\n\n      // Check if there's a warning message (e.g., some documents failed to upload)\n      if (updatedClient.warningMessage) {\n        setSuccessMessage(updatedClient.warningMessage);\n        // Don't navigate away when there's a warning about documents\n        return;\n      }\n\n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error) {\n      console.error('Error al actualizar cliente:', error);\n\n      // Specific message for RLS policy violations\n      if (error.message && (error.message.includes('políticas de seguridad RLS') || error.message.includes('permisos') || error.message.includes('Unauthorized') || error.message.includes('No tienes permisos'))) {\n        setError(`Error de permisos: ${error.message}. Contacte al administrador para verificar las políticas de seguridad de la base de datos.`);\n      } else if (error.message && error.message.includes('actualización no tuvo efecto')) {\n        // For when update has no effect due to RLS or unchanged data\n        setError(`${error.message} Contacte al administrador para verificar si tiene los permisos necesarios.`);\n      } else {\n        // Generic error\n        setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n      }\n\n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle partial save\n  const handleSavePartial = async (data, step) => {\n    try {\n      // Log the saving attempt\n      console.log(`🔍 Guardando datos parciales del cliente en paso ${step}...`);\n      console.log('🔍 Datos a guardar:', data);\n\n      // Show saving indicator\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n\n      if (!client || !client.id) {\n        throw new Error('No se encontró el ID del cliente para actualización parcial');\n      }\n\n      // Asegurarnos de que siempre incluimos el ID del cliente\n      const partialData = {\n        id: client.id,\n        // Siempre incluir el ID para asegurar la actualización correcta\n        ...collectFieldsForStep(data, step)\n      };\n\n      // Asegurarnos de que tenemos campos importantes como company_id\n      if (!partialData.company_id && client.company_id) {\n        partialData.company_id = client.company_id;\n      }\n\n      // Asegurarnos de que tenemos advisor_id\n      if (!partialData.advisor_id && client.advisor_id) {\n        partialData.advisor_id = client.advisor_id;\n      }\n      console.log('🔍 Datos finales a enviar a Supabase:', partialData);\n      try {\n        // Update client with partial data\n        const updatedClient = await updateClient(client.id, partialData);\n        console.log(`🔍 Actualización exitosa para sección ${step}:`, updatedClient);\n        if (!updatedClient) {\n          throw new Error('No se recibió respuesta después de la actualización');\n        }\n\n        // Create a complete merged client object with ALL data\n        // This ensures all fields are available in subsequent steps\n        const mergedClient = {\n          ...client,\n          // Start with original data\n          ...partialData,\n          // Apply our partial changes \n          ...updatedClient // Apply any additional fields returned from the update\n        };\n\n        // Update local state with the merged client data\n        setClient(mergedClient);\n        console.log('🔍 Cliente actualizado en estado local:', mergedClient);\n\n        // Show success message (including any warnings)\n        if (updatedClient.warningMessage) {\n          setSuccessMessage(updatedClient.warningMessage);\n        } else {\n          setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n        }\n\n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n\n        // Return the complete merged client data to the form\n        // This ensures we always have all client data in the form regardless of step\n        console.log('🔍 Datos completos a devolver al formulario:', mergedClient);\n\n        // For debugging, log all the fields we expect to see in the next step\n        if (step === 1 && mergedClient) {\n          console.log('🔍 Verificando campos financieros para el paso 2:');\n          console.log('employment_type:', mergedClient.employment_type);\n          console.log('employment_years:', mergedClient.employment_years);\n          console.log('monthly_income:', mergedClient.monthly_income);\n          console.log('additional_income:', mergedClient.additional_income);\n          console.log('monthly_expenses:', mergedClient.monthly_expenses);\n          console.log('other_loan_balances:', mergedClient.other_loan_balances);\n        } else if (step === 2 && mergedClient) {\n          console.log('🔍 Verificando campos bancarios para el paso 3:');\n          console.log('bank_name:', mergedClient.bank_name);\n          console.log('bank_clabe:', mergedClient.bank_clabe);\n          console.log('bank_account_number:', mergedClient.bank_account_number);\n          console.log('bank_account_type:', mergedClient.bank_account_type);\n          console.log('bank_account_origin:', mergedClient.bank_account_origin);\n        }\n        return mergedClient;\n      } catch (err) {\n        console.error(`🔍 Error al actualizar cliente en paso ${step}:`, err);\n\n        // Log more details about the error\n        if (err.message) console.error('Error message:', err.message);\n        if (err.cause) console.error('Error cause:', err.cause);\n        if (err.stack) console.error('Error stack:', err.stack);\n\n        // Try to get more information if it's a Supabase error\n        if (err.code || err.details || err.hint) {\n          console.error('Supabase error details:', {\n            code: err.code,\n            details: err.details,\n            hint: err.hint\n          });\n        }\n\n        // Specific message for RLS policy violations\n        if (err.message && (err.message.includes('políticas de seguridad RLS') || err.message.includes('permisos') || err.message.includes('Unauthorized') || err.message.includes('No tienes permisos'))) {\n          setError(`Error de permisos al guardar la sección ${step}: ${err.message}. \n            Contacte al administrador para verificar las políticas de seguridad de la base de datos.`);\n        } else if (err.message && err.message.includes('actualización no tuvo efecto')) {\n          // For when update has no effect due to RLS or unchanged data\n          setError(`${err.message} Contacte al administrador para verificar si tiene los permisos necesarios.`);\n        } else {\n          // Generic error for other cases\n          setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        }\n        throw err;\n      }\n    } catch (error) {\n      console.error(`🔍 Error en handleSavePartial en paso ${step}:`, error);\n\n      // Don't override more specific error messages - this is a fallback\n      if (!document.getElementById('error-message')) {\n        setError(error.message || `Error al guardar la sección ${step}. Por favor, intente nuevamente.`);\n      }\n\n      // Mostrar el error por 6 segundos antes de limpiarlo automáticamente\n      setTimeout(() => {\n        if (error.message === setError) {\n          // Solo limpiar si es el mismo error\n          setError(null);\n        }\n      }, 6000);\n      return null;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Helper function to collect fields based on step\n  const collectFieldsForStep = (data, step) => {\n    const result = {};\n\n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    switch (step) {\n      case 1:\n        // Personal data\n        const personalFields = ['first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone', 'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address', 'city', 'state', 'postal_code'];\n        personalFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 2:\n        // Financial details\n        const financialFields = ['employment_type', 'employment_years', 'monthly_income', 'additional_income', 'monthly_expenses', 'other_loan_balances'];\n        financialFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      case 3:\n        // Bank details\n        const bankFields = ['bank_name', 'bank_clabe', 'bank_account_number', 'bank_account_type', 'bank_account_origin'];\n        bankFields.forEach(field => {\n          if (field in data) {\n            result[field] = data[field];\n          }\n        });\n        break;\n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    return result;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading loading-spinner loading-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !client) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error || 'No se encontró el cliente solicitado.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate('/clients'),\n            className: \"btn btn-primary\",\n            children: \"Volver a Clientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/clients'),\n          className: \"btn btn-sm btn-outline mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-1\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), \"Volver\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold\",\n          children: \"Editar Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setError(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: successMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSuccessMessage(null),\n            className: \"ml-auto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-64\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading loading-spinner loading-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this) : client ? /*#__PURE__*/_jsxDEV(ClientForm, {\n        initialData: client,\n        onSubmit: handleSubmit,\n        onSavePartial: handleSavePartial,\n        existingDocuments: existingDocuments,\n        isSubmitting: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Cliente no encontrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(EditClient, \"m9Bvmv+tc+XHBBVVqwNbWiQwusA=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = EditClient;\nexport default EditClient;\nvar _c;\n$RefreshReg$(_c, \"EditClient\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","MainLayout","ClientForm","getClientById","updateClient","getClientDocuments","jsxDEV","_jsxDEV","DEFAULT_COMPANY_ID","EditClient","_s","id","navigate","user","client","setClient","existingDocuments","setExistingDocuments","loading","setLoading","loadingDocuments","setLoadingDocuments","isSubmitting","setIsSubmitting","error","setError","successMessage","setSuccessMessage","fetchClientData","fetchClientDocuments","clientId","console","log","clientData","err","documentsData","storedDocuments","map","doc","name","file_name","category","url","file_path","handleSubmit","data","uploadDocuments","length","updatedClient","warningMessage","message","includes","window","scrollTo","handleSavePartial","step","Error","partialData","collectFieldsForStep","company_id","advisor_id","mergedClient","setTimeout","employment_type","employment_years","monthly_income","additional_income","monthly_expenses","other_loan_balances","bank_name","bank_clabe","bank_account_number","bank_account_type","bank_account_origin","cause","stack","code","details","hint","document","getElementById","result","personalFields","forEach","field","financialFields","bankFields","warn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","fillRule","clipRule","initialData","onSubmit","onSavePartial","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/EditClient.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport MainLayout from '../components/layout/MainLayout';\nimport ClientForm from '../components/clients/ClientForm';\nimport { Client, ClientDocument, getClientById, updateClient, uploadClientDocuments } from '../services/clientService';\nimport { getClientDocuments, Document } from '../services/documentService';\nimport Alert from '../components/ui/Alert';\n\n// Interface for documents that have been stored (don't have file object)\ninterface StoredDocument {\n  id: string;\n  name: string;\n  category: string;\n  url?: string;\n  // No file property since these are already stored\n}\n\n// Default company ID (Herramental)\nconst DEFAULT_COMPANY_ID = \"70b2aa97-a5b6-4b5e-91db-be8acbd3701a\";\n\nconst EditClient: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  const [client, setClient] = useState<Client | null>(null);\n  const [existingDocuments, setExistingDocuments] = useState<StoredDocument[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingDocuments, setLoadingDocuments] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (id) {\n      fetchClientData(id);\n      fetchClientDocuments(id);\n    }\n  }, [id]);\n\n  const fetchClientData = async (clientId: string) => {\n    try {\n      setLoading(true);\n      console.log(`Fetching client data for ID ${clientId}`);\n      const clientData = await getClientById(clientId);\n      \n      if (clientData) {\n        console.log('Client data retrieved successfully:', clientData);\n        setClient(clientData);\n      } else {\n        setError('No se encontró el cliente especificado.');\n      }\n    } catch (err) {\n      console.error('Error al obtener datos del cliente:', err);\n      setError('Error al cargar los datos del cliente. Por favor, intente de nuevo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchClientDocuments = async (clientId: string) => {\n    try {\n      setLoadingDocuments(true);\n      console.log(`Fetching documents for client ${clientId}`);\n      const documentsData = await getClientDocuments(clientId);\n      console.log('Documents retrieved:', documentsData);\n      \n      // Convert server documents to StoredDocument format\n      const storedDocuments: StoredDocument[] = documentsData.map(doc => ({\n        id: doc.id,\n        name: doc.file_name || '',\n        category: doc.category || '',\n        url: doc.file_path\n      }));\n      \n      setExistingDocuments(storedDocuments);\n    } catch (err) {\n      console.error('Error fetching client documents:', err);\n      // Don't show error to user - just log it\n    } finally {\n      setLoadingDocuments(false);\n    }\n  };\n\n  const handleSubmit = async (data: Partial<Client>, uploadDocuments: ClientDocument[]) => {\n    if (!id) return;\n    \n    try {\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      setSuccessMessage(null); // Clear any previous success message\n      \n      // First save the client data with documents\n      console.log('Updating client data with documents...', data);\n      console.log('Documents to upload:', uploadDocuments.length);\n      const updatedClient = await updateClient(id, data, uploadDocuments, user?.id);\n      console.log('Client data successfully updated', updatedClient);\n      \n      // Check if there's a warning message (e.g., some documents failed to upload)\n      if (updatedClient.warningMessage) {\n        setSuccessMessage(updatedClient.warningMessage);\n        // Don't navigate away when there's a warning about documents\n        return;\n      }\n      \n      // Successfully updated\n      console.log('Client update complete');\n      navigate('/clients');\n    } catch (error: any) {\n      console.error('Error al actualizar cliente:', error);\n      \n      // Specific message for RLS policy violations\n      if (error.message && (\n        error.message.includes('políticas de seguridad RLS') ||\n        error.message.includes('permisos') ||\n        error.message.includes('Unauthorized') ||\n        error.message.includes('No tienes permisos')\n      )) {\n        setError(`Error de permisos: ${error.message}. Contacte al administrador para verificar las políticas de seguridad de la base de datos.`);\n      } else if (error.message && error.message.includes('actualización no tuvo efecto')) {\n        // For when update has no effect due to RLS or unchanged data\n        setError(`${error.message} Contacte al administrador para verificar si tiene los permisos necesarios.`);\n      } else {\n        // Generic error\n      setError(error.message || 'Error al guardar los cambios. Por favor, intente de nuevo.');\n      }\n      \n      // Scroll to top to show the error message\n      window.scrollTo(0, 0);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Handle partial save\n  const handleSavePartial = async (data: Partial<Client>, step: number) => {\n    try {\n      // Log the saving attempt\n      console.log(`🔍 Guardando datos parciales del cliente en paso ${step}...`);\n      console.log('🔍 Datos a guardar:', data);\n      \n      // Show saving indicator\n      setIsSubmitting(true);\n      setError(null); // Clear any previous errors\n      \n      if (!client || !client.id) {\n        throw new Error('No se encontró el ID del cliente para actualización parcial');\n      }\n      \n      // Asegurarnos de que siempre incluimos el ID del cliente\n      const partialData: Partial<Client> = {\n        id: client.id, // Siempre incluir el ID para asegurar la actualización correcta\n        ...collectFieldsForStep(data, step)\n      };\n      \n      // Asegurarnos de que tenemos campos importantes como company_id\n      if (!partialData.company_id && client.company_id) {\n        partialData.company_id = client.company_id;\n      }\n      \n      // Asegurarnos de que tenemos advisor_id\n      if (!partialData.advisor_id && client.advisor_id) {\n        partialData.advisor_id = client.advisor_id;\n      }\n      \n      console.log('🔍 Datos finales a enviar a Supabase:', partialData);\n      \n      try {\n        // Update client with partial data\n        const updatedClient = await updateClient(client.id, partialData);\n        console.log(`🔍 Actualización exitosa para sección ${step}:`, updatedClient);\n        \n        if (!updatedClient) {\n          throw new Error('No se recibió respuesta después de la actualización');\n        }\n        \n        // Create a complete merged client object with ALL data\n        // This ensures all fields are available in subsequent steps\n        const mergedClient = {\n          ...client,                 // Start with original data\n          ...partialData,            // Apply our partial changes \n          ...updatedClient           // Apply any additional fields returned from the update\n        };\n        \n        // Update local state with the merged client data\n        setClient(mergedClient as Client);\n        console.log('🔍 Cliente actualizado en estado local:', mergedClient);\n        \n        // Show success message (including any warnings)\n        if (updatedClient.warningMessage) {\n          setSuccessMessage(updatedClient.warningMessage);\n        } else {\n          setSuccessMessage(`Se guardaron los datos de la sección ${step} correctamente`);\n        }\n        \n        // Clear message after delay\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n        \n        // Return the complete merged client data to the form\n        // This ensures we always have all client data in the form regardless of step\n        console.log('🔍 Datos completos a devolver al formulario:', mergedClient);\n        \n        // For debugging, log all the fields we expect to see in the next step\n        if (step === 1 && mergedClient) {\n          console.log('🔍 Verificando campos financieros para el paso 2:');\n          console.log('employment_type:', mergedClient.employment_type);\n          console.log('employment_years:', mergedClient.employment_years);\n          console.log('monthly_income:', mergedClient.monthly_income);\n          console.log('additional_income:', mergedClient.additional_income);\n          console.log('monthly_expenses:', mergedClient.monthly_expenses);\n          console.log('other_loan_balances:', mergedClient.other_loan_balances);\n        } else if (step === 2 && mergedClient) {\n          console.log('🔍 Verificando campos bancarios para el paso 3:');\n          console.log('bank_name:', mergedClient.bank_name);\n          console.log('bank_clabe:', mergedClient.bank_clabe);\n          console.log('bank_account_number:', mergedClient.bank_account_number);\n          console.log('bank_account_type:', mergedClient.bank_account_type);\n          console.log('bank_account_origin:', mergedClient.bank_account_origin);\n        }\n        \n        return mergedClient;\n      } catch (err: any) {\n        console.error(`🔍 Error al actualizar cliente en paso ${step}:`, err);\n        \n        // Log more details about the error\n        if (err.message) console.error('Error message:', err.message);\n        if (err.cause) console.error('Error cause:', err.cause);\n        if (err.stack) console.error('Error stack:', err.stack);\n        \n        // Try to get more information if it's a Supabase error\n        if (err.code || err.details || err.hint) {\n          console.error('Supabase error details:', {\n            code: err.code,\n            details: err.details,\n            hint: err.hint\n          });\n        }\n        \n        // Specific message for RLS policy violations\n        if (err.message && (\n          err.message.includes('políticas de seguridad RLS') ||\n          err.message.includes('permisos') ||\n          err.message.includes('Unauthorized') ||\n          err.message.includes('No tienes permisos')\n        )) {\n          setError(`Error de permisos al guardar la sección ${step}: ${err.message}. \n            Contacte al administrador para verificar las políticas de seguridad de la base de datos.`);\n        } else if (err.message && err.message.includes('actualización no tuvo efecto')) {\n          // For when update has no effect due to RLS or unchanged data\n          setError(`${err.message} Contacte al administrador para verificar si tiene los permisos necesarios.`);\n        } else {\n          // Generic error for other cases\n        setError(`Error al guardar la sección ${step}: ${err.message || 'Error desconocido'}`);\n        }\n        \n        throw err;\n      }\n    } catch (error: any) {\n      console.error(`🔍 Error en handleSavePartial en paso ${step}:`, error);\n      \n      // Don't override more specific error messages - this is a fallback\n      if (!document.getElementById('error-message')) {\n      setError(error.message || `Error al guardar la sección ${step}. Por favor, intente nuevamente.`);\n      }\n      \n      // Mostrar el error por 6 segundos antes de limpiarlo automáticamente\n      setTimeout(() => {\n        if (error.message === setError) { // Solo limpiar si es el mismo error\n          setError(null);\n        }\n      }, 6000);\n      \n      return null;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  // Helper function to collect fields based on step\n  const collectFieldsForStep = (data: Partial<Client>, step: number): Partial<Client> => {\n    const result: Partial<Client> = {};\n    \n    // Always preserve these fields if they exist\n    if (data.id) result.id = data.id;\n    if (data.company_id) result.company_id = data.company_id;\n    if (data.advisor_id) result.advisor_id = data.advisor_id;\n    \n    switch(step) {\n      case 1: // Personal data\n        const personalFields = [\n          'first_name', 'paternal_surname', 'maternal_surname', 'email', 'phone',\n          'rfc', 'curp', 'birth_date', 'gender', 'marital_status', 'address',\n          'city', 'state', 'postal_code'\n        ];\n        personalFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 2: // Financial details\n        const financialFields = [\n          'employment_type', 'employment_years', 'monthly_income',\n          'additional_income', 'monthly_expenses', 'other_loan_balances'\n        ];\n        financialFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      case 3: // Bank details\n        const bankFields = [\n          'bank_name', 'bank_clabe', 'bank_account_number',\n          'bank_account_type', 'bank_account_origin'\n        ];\n        bankFields.forEach(field => {\n          if (field in data) {\n            (result as any)[field] = (data as any)[field];\n          }\n        });\n        break;\n        \n      default:\n        console.warn(`🔍 Paso desconocido para guardado parcial: ${step}`);\n    }\n    \n    return result;\n  };\n\n  if (loading) {\n    return (\n      <MainLayout>\n        <div className=\"p-6 flex justify-center\">\n          <span className=\"loading loading-spinner loading-lg\"></span>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  if (error || !client) {\n    return (\n      <MainLayout>\n        <div className=\"p-6\">\n          <div className=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>{error || 'No se encontró el cliente solicitado.'}</span>\n          </div>\n          <div className=\"mt-4\">\n            <button \n              onClick={() => navigate('/clients')}\n              className=\"btn btn-primary\"\n            >\n              Volver a Clientes\n            </button>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6\">\n        <div className=\"flex items-center mb-6\">\n          <button \n            onClick={() => navigate('/clients')} \n            className=\"btn btn-sm btn-outline mr-4\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n            </svg>\n            Volver\n          </button>\n          <h1 className=\"text-2xl font-bold\">Editar Cliente</h1>\n        </div>\n        \n        {/* Display error alert if there's an error */}\n        {error && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-error\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{error}</span>\n              <button onClick={() => setError(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {/* Display success message if there's one */}\n        {successMessage && (\n          <div className=\"mb-4\">\n            <div className=\"alert alert-success\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span>{successMessage}</span>\n              <button onClick={() => setSuccessMessage(null)} className=\"ml-auto\">×</button>\n            </div>\n          </div>\n        )}\n        \n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"loading loading-spinner loading-lg\"></div>\n          </div>\n        ) : client ? (\n          <ClientForm \n            initialData={client}\n            onSubmit={handleSubmit}\n            onSavePartial={handleSavePartial}\n            existingDocuments={existingDocuments}\n            isSubmitting={isSubmitting}\n          />\n        ) : (\n          <div className=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span>Cliente no encontrado</span>\n          </div>\n        )}\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default EditClient; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}