{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/StatusDistributionChart.tsx\";\nimport * as React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Registrar componentes necesarios de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend, Title);\n// Definir colores específicos para cada estado\nconst STATUS_COLORS_MAP = {\n  'pending': '#FBBD23',\n  // amarillo para pendiente\n  'in_review': '#D926AA',\n  // magenta para revisión\n  'approved': '#36D399',\n  // verde para aprobado\n  'rejected': '#F87272',\n  // rojo para rechazado\n  'completed': '#570DF8',\n  // azul para completado\n  'cancelled': '#6E6E6E',\n  // gris para cancelado\n  'por_dispersar': '#62A0EA',\n  // celeste para dispersar\n  'expired': '#FF5757',\n  // rojo brillante para expirado\n  'new': '#3ABFF8',\n  // azul claro para nuevo\n  'default': '#cccccc' // gris claro para desconocidos\n};\n\n// Definir etiquetas en español\nconst STATUS_LABELS_MAP = {\n  'pending': 'Pendiente',\n  'in_review': 'En Revisión',\n  'approved': 'Aprobado',\n  'rejected': 'Rechazado',\n  'completed': 'Completado',\n  'cancelled': 'Cancelado',\n  'por_dispersar': 'Por Dispersar',\n  'expired': 'Expirado',\n  'new': 'Nuevo',\n  'solicitud': 'Pendiente',\n  'default': 'Desconocido'\n};\nconst StatusDistributionChart = ({\n  data,\n  title = 'Distribución por Estado',\n  height = 240,\n  showLegend = true,\n  className = ''\n}) => {\n  // Si no hay datos, mostrar mensaje\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full bg-base-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"Sin datos disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Normalizar estados y agrupar por categoría\n  const normalizeStatus = status => {\n    const lowerStatus = status.toLowerCase();\n    if (lowerStatus.includes('pend') || lowerStatus === 'new' || lowerStatus === 'solicitud') {\n      return 'pending';\n    } else if (lowerStatus.includes('review') || lowerStatus.includes('revis')) {\n      return 'in_review';\n    } else if (lowerStatus.includes('aprob') || lowerStatus.includes('aprov')) {\n      return 'approved';\n    } else if (lowerStatus.includes('recha') || lowerStatus.includes('reject')) {\n      return 'rejected';\n    } else if (lowerStatus.includes('comple')) {\n      return 'completed';\n    } else if (lowerStatus.includes('cancel')) {\n      return 'cancelled';\n    } else if (lowerStatus.includes('disper')) {\n      return 'por_dispersar';\n    } else if (lowerStatus.includes('expir')) {\n      return 'expired';\n    } else {\n      return 'default';\n    }\n  };\n\n  // Agrupar datos por estado normalizado\n  const groupedData = {};\n  data.forEach(item => {\n    const normalizedStatus = normalizeStatus(item.status);\n    if (!groupedData[normalizedStatus]) {\n      groupedData[normalizedStatus] = 0;\n    }\n    groupedData[normalizedStatus] += item.count;\n  });\n\n  // Preparar datos para el gráfico\n  const statuses = Object.keys(groupedData);\n  const counts = Object.values(groupedData);\n  const colors = statuses.map(status => STATUS_COLORS_MAP[status] || STATUS_COLORS_MAP.default);\n  const labels = statuses.map(status => STATUS_LABELS_MAP[status] || status);\n\n  // Datos del gráfico\n  const chartData = {\n    labels,\n    datasets: [{\n      data: counts,\n      backgroundColor: colors,\n      borderColor: colors,\n      borderWidth: 1\n    }]\n  };\n\n  // Opciones del gráfico\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLegend,\n        position: 'right',\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            const total = counts.reduce((a, b) => a + b, 0);\n            const percentage = Math.round(value / total * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chart-container ${className}`,\n    style: {\n      height: `${height}px`\n    },\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusDistributionChart;\nexport default StatusDistributionChart;\nvar _c;\n$RefreshReg$(_c, \"StatusDistributionChart\");","map":{"version":3,"names":["React","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","Title","jsxDEV","_jsxDEV","register","STATUS_COLORS_MAP","STATUS_LABELS_MAP","StatusDistributionChart","data","title","height","showLegend","className","length","children","fileName","_jsxFileName","lineNumber","columnNumber","normalizeStatus","status","lowerStatus","toLowerCase","includes","groupedData","forEach","item","normalizedStatus","count","statuses","Object","keys","counts","values","colors","map","default","labels","chartData","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","display","position","boxWidth","padding","font","size","text","tooltip","callbacks","label","context","value","raw","total","reduce","a","b","percentage","Math","round","style","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/ui/charts/StatusDistributionChart.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { APPLICATION_STATUS } from '../../../utils/constants/statuses';\n\n// Registrar componentes necesarios de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend, Title);\n\ninterface StatusDistributionChartProps {\n  data: {\n    status: string;\n    count: number;\n  }[];\n  title?: string;\n  height?: number;\n  showLegend?: boolean;\n  className?: string;\n}\n\n// Definir colores específicos para cada estado\nconst STATUS_COLORS_MAP = {\n  'pending': '#FBBD23',     // amarillo para pendiente\n  'in_review': '#D926AA',   // magenta para revisión\n  'approved': '#36D399',    // verde para aprobado\n  'rejected': '#F87272',    // rojo para rechazado\n  'completed': '#570DF8',   // azul para completado\n  'cancelled': '#6E6E6E',   // gris para cancelado\n  'por_dispersar': '#62A0EA', // celeste para dispersar\n  'expired': '#FF5757',     // rojo brillante para expirado\n  'new': '#3ABFF8',         // azul claro para nuevo\n  'default': '#cccccc'      // gris claro para desconocidos\n};\n\n// Definir etiquetas en español\nconst STATUS_LABELS_MAP = {\n  'pending': 'Pendiente',\n  'in_review': 'En Revisión',\n  'approved': 'Aprobado',\n  'rejected': 'Rechazado',\n  'completed': 'Completado',\n  'cancelled': 'Cancelado',\n  'por_dispersar': 'Por Dispersar',\n  'expired': 'Expirado',\n  'new': 'Nuevo',\n  'solicitud': 'Pendiente',\n  'default': 'Desconocido'\n};\n\nconst StatusDistributionChart: React.FC<StatusDistributionChartProps> = ({\n  data,\n  title = 'Distribución por Estado',\n  height = 240,\n  showLegend = true,\n  className = '',\n}) => {\n  // Si no hay datos, mostrar mensaje\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-base-200 rounded-lg\">\n        <p className=\"text-sm text-gray-500\">Sin datos disponibles</p>\n      </div>\n    );\n  }\n\n  // Normalizar estados y agrupar por categoría\n  const normalizeStatus = (status: string): string => {\n    const lowerStatus = status.toLowerCase();\n    \n    if (lowerStatus.includes('pend') || lowerStatus === 'new' || lowerStatus === 'solicitud') {\n      return 'pending';\n    } else if (lowerStatus.includes('review') || lowerStatus.includes('revis')) {\n      return 'in_review';\n    } else if (lowerStatus.includes('aprob') || lowerStatus.includes('aprov')) {\n      return 'approved';\n    } else if (lowerStatus.includes('recha') || lowerStatus.includes('reject')) {\n      return 'rejected';\n    } else if (lowerStatus.includes('comple')) {\n      return 'completed';\n    } else if (lowerStatus.includes('cancel')) {\n      return 'cancelled';\n    } else if (lowerStatus.includes('disper')) {\n      return 'por_dispersar';\n    } else if (lowerStatus.includes('expir')) {\n      return 'expired';\n    } else {\n      return 'default';\n    }\n  };\n\n  // Agrupar datos por estado normalizado\n  const groupedData: Record<string, number> = {};\n  data.forEach(item => {\n    const normalizedStatus = normalizeStatus(item.status);\n    if (!groupedData[normalizedStatus]) {\n      groupedData[normalizedStatus] = 0;\n    }\n    groupedData[normalizedStatus] += item.count;\n  });\n\n  // Preparar datos para el gráfico\n  const statuses = Object.keys(groupedData);\n  const counts = Object.values(groupedData);\n  const colors = statuses.map(status => STATUS_COLORS_MAP[status as keyof typeof STATUS_COLORS_MAP] || STATUS_COLORS_MAP.default);\n  const labels = statuses.map(status => STATUS_LABELS_MAP[status as keyof typeof STATUS_LABELS_MAP] || status);\n\n  // Datos del gráfico\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        data: counts,\n        backgroundColor: colors,\n        borderColor: colors,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Opciones del gráfico\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: showLegend,\n        position: 'right' as const,\n        labels: {\n          boxWidth: 15,\n          padding: 15,\n          font: {\n            size: 12,\n          },\n        },\n      },\n      title: {\n        display: !!title,\n        text: title,\n        font: {\n          size: 16,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context: any) => {\n            const label = context.label || '';\n            const value = context.raw || 0;\n            const total = counts.reduce((a, b) => a + b, 0);\n            const percentage = Math.round((value / total) * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className={`chart-container ${className}`} style={{ height: `${height}px` }}>\n      <Pie data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default StatusDistributionChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}