{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\nimport { formatCurrency, formatDate } from '../utils/formatters';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport { getGeneralDashboardStats, getAdvisorStats, getCompanyDashboardStats, getPendingApprovals } from '../services/dashboardService';\n\n// Interfaces adicionales\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\n\n// Tipo combinado para stats con todas las propiedades posibles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState(null);\n  const [error, setError] = useState(null);\n  const [partialData, setPartialData] = useState(false);\n  const [filters, setFilters] = useState({\n    startDate: '',\n    endDate: '',\n    advisorId: '',\n    companyId: ''\n  });\n  const [pendingApproval, setPendingApproval] = useState(0);\n\n  // Create a wrapper for formatCurrency that matches MetricCard's formatValue type\n  const formatMetricValue = value => {\n    if (typeof value === 'string') {\n      return formatCurrency(parseFloat(value) || 0);\n    }\n    return formatCurrency(value || 0);\n  };\n\n  // Comprobar si el objeto es de tipo ApplicationStats\n  const isAdvisorStats = obj => {\n    console.log('Checking if stats is AdvisorStats:', JSON.stringify(obj));\n    return obj && 'advisorId' in obj && 'conversionRate' in obj;\n  };\n\n  // Comprobar si el objeto es de tipo CompanyStats\n  const isCompanyStats = obj => {\n    console.log('Checking if stats is CompanyStats:', JSON.stringify(obj));\n    return obj && 'totalAdvisors' in obj && 'avgApprovalTime' in obj;\n  };\n\n  // Define the fallback functions before they're used in useEffect\n  // Crear datos de respaldo para estadísticas generales\n  const createFallbackGeneralStats = () => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      averageAmount: 0,\n      recentApplications: [],\n      applicationsByStatus: {},\n      applicationsByMonth: [],\n      advisorPerformance: []\n    };\n  };\n\n  // Crear datos de respaldo para estadísticas de asesor\n  const createFallbackAdvisorStats = advisorId => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      averageAmount: 0,\n      recentApplications: [],\n      advisorId: advisorId,\n      advisorName: (user === null || user === void 0 ? void 0 : user.name) || 'Asesor',\n      applicationsByMonth: [],\n      applicationsByStatus: {},\n      totalApproved: 0,\n      totalRejected: 0,\n      totalPending: 0,\n      pendingApproval: 0,\n      totalClients: 0,\n      totalCompanies: 0,\n      conversionRate: 0,\n      avgTimeToApproval: 0,\n      advisorPerformance: []\n    };\n  };\n\n  // Crear datos de respaldo para estadísticas de empresa\n  const createFallbackCompanyStats = companyId => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      avgAmount: 0,\n      recentApplications: [],\n      totalClients: 0,\n      totalAdvisors: 0,\n      avgApprovalTime: 0,\n      applicationsByStatus: [],\n      applicationsByMonth: [],\n      advisorPerformance: []\n    };\n  };\n\n  // Función para cargar estadísticas basadas en el rol\n  const loadStats = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Loading dashboard stats...');\n      console.log('Current user:', user);\n      if (!user) {\n        console.log('No user found, returning early');\n        setIsLoading(false);\n        return;\n      }\n      let dashboardStats = null;\n\n      // Definir filtros para la consulta\n      const queryFilters = {\n        startDate: filters.startDate || undefined,\n        endDate: filters.endDate || undefined,\n        advisorId: filters.advisorId || undefined,\n        companyId: filters.companyId || undefined\n      };\n      console.log('Using query filters:', queryFilters);\n      if (user.role === USER_ROLES.SUPERADMIN) {\n        console.log('Loading stats for SUPERADMIN');\n        dashboardStats = await getGeneralDashboardStats(queryFilters);\n      } else if (user.role === USER_ROLES.ADVISOR) {\n        var _dashboardStats, _dashboardStats2, _dashboardStats3;\n        console.log('Loading stats for ADVISOR with ID:', user.id);\n        dashboardStats = await getAdvisorStats(user.id, queryFilters);\n        console.log('ADVISOR stats loaded:', {\n          totalApplications: (_dashboardStats = dashboardStats) === null || _dashboardStats === void 0 ? void 0 : _dashboardStats.totalApplications,\n          approvedApplications: (_dashboardStats2 = dashboardStats) === null || _dashboardStats2 === void 0 ? void 0 : _dashboardStats2.approvedApplications,\n          applicationsByStatus: (_dashboardStats3 = dashboardStats) === null || _dashboardStats3 === void 0 ? void 0 : _dashboardStats3.applicationsByStatus\n        });\n      } else if (user.role === USER_ROLES.COMPANY_ADMIN) {\n        console.log('Loading stats for COMPANY_ADMIN with entity ID:', user.entityId);\n        if (user.entityId) {\n          // Si el usuario es administrador de empresa, cargar estadísticas de la empresa\n          dashboardStats = await getCompanyDashboardStats(user.entityId, queryFilters);\n        } else {\n          console.error('Company admin user has no entityId (company_id)');\n        }\n      }\n      console.log('Received dashboard stats:', dashboardStats);\n      if (dashboardStats && 'applicationsByStatus' in dashboardStats) {\n        console.log('Applications by status:', dashboardStats.applicationsByStatus);\n      }\n      if (dashboardStats && 'applicationsByMonth' in dashboardStats) {\n        console.log('Applications by month:', dashboardStats.applicationsByMonth);\n      }\n\n      // Obtener información de aprobaciones pendientes\n      try {\n        const isPendingApprovals = user.role === USER_ROLES.ADVISOR || user.role === USER_ROLES.COMPANY_ADMIN;\n        if (isPendingApprovals && user.id) {\n          console.log('Fetching pending approvals for user:', user.id, 'isCompanyAdmin:', user.role === USER_ROLES.COMPANY_ADMIN);\n          const pendingData = await getPendingApprovals(user.role === USER_ROLES.COMPANY_ADMIN ? user.entityId || user.id : user.id, user.role === USER_ROLES.COMPANY_ADMIN);\n          console.log('Pending approvals data:', pendingData);\n          setPendingApproval(pendingData.totalPending);\n        }\n      } catch (approvalError) {\n        console.error('Error fetching pending approvals:', approvalError);\n      }\n      setStats(dashboardStats);\n    } catch (error) {\n      console.error('Error loading dashboard stats:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadStats();\n  }, [user, filters]);\n\n  // Manejadores para los filtros\n  const handleFilterChange = newFilters => {\n    setFilters(prev => ({\n      ...prev,\n      ...newFilters\n    }));\n  };\n\n  // Utility function to get application type label\n  const getApplicationTypeLabel = type => {\n    return APPLICATION_TYPE_LABELS[type] || type;\n  };\n\n  // Check if stats has the amountRanges and mockAdvisorPerformance properties\n  const hasExtendedData = stats => {\n    return 'amountRanges' in stats && 'mockAdvisorPerformance' in stats;\n  };\n\n  // Add debug logging for dashboard rendering\n  useEffect(() => {\n    if (stats) {\n      console.log('Dashboard rendering with stats:', {\n        totalApplications: stats.totalApplications,\n        pendingApplications: stats.pendingApplications,\n        approvedApplications: stats.approvedApplications,\n        rejectedApplications: stats.rejectedApplications,\n        applicationsByStatus: stats.applicationsByStatus,\n        applicationsByStatusType: Array.isArray(stats.applicationsByStatus) ? 'array' : typeof stats.applicationsByStatus\n      });\n    }\n  }, [stats]);\n\n  // Utility to check if applicationsByStatus is in array format (CompanyStats)\n  // or object format (ApplicationStats/DashboardStats)\n  const isApplicationStatusArray = data => {\n    return Array.isArray(data) && data.length > 0 && 'status' in data[0] && 'count' in data[0];\n  };\n  const formatStatusData = statusData => {\n    if (isApplicationStatusArray(statusData)) {\n      return statusData;\n    } else if (statusData && typeof statusData === 'object' && !Array.isArray(statusData)) {\n      return Object.entries(statusData).map(([status, count]) => ({\n        status,\n        count: typeof count === 'number' ? count : 0\n      }));\n    }\n    return [];\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    console.log('Dashboard is in loading state');\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading loading-spinner loading-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    console.log('Dashboard has error:', error);\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    console.log('Dashboard has no stats data');\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No hay datos disponibles para mostrar en el dashboard.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si es asesor, mostrar sus métricas específicas\n  if (isAdvisorStats(stats)) {\n    console.log('Rendering advisor dashboard with data:', {\n      totalApplications: stats.totalApplications,\n      approvedApplications: stats.approvedApplications,\n      applicationsByStatus: stats.applicationsByStatus\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), partialData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Solicitudes\",\n          value: stats.totalApplications,\n          icon: /*#__PURE__*/_jsxDEV(ChartBarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 19\n          }, this),\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Solicitudes Aprobadas\",\n          value: isAdvisorStats(stats) ? stats.approvedApplications : stats.approvedApplications,\n          previousValue: 0,\n          icon: /*#__PURE__*/_jsxDEV(ClipboardDocumentCheckIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 19\n          }, this),\n          color: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Monto Promedio\",\n          value: isCompanyStats(stats) ? stats.avgAmount : stats.averageAmount,\n          formatValue: formatMetricValue,\n          icon: /*#__PURE__*/_jsxDEV(CurrencyDollarIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 19\n          }, this),\n          color: \"indigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), isAdvisorStats(stats) ? /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Tasa de Conversi\\xF3n\",\n          value: stats.conversionRate,\n          isPercentage: true,\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"Total de Clientes\",\n          value: 'totalClients' in stats && stats.totalClients !== undefined ? Number(stats.totalClients) : 0,\n          icon: /*#__PURE__*/_jsxDEV(UserGroupIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 21\n          }, this),\n          color: \"purple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Solicitudes por Mes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), stats.applicationsByMonth && /*#__PURE__*/_jsxDEV(MonthlyApplicationsChart, {\n              data: Array.isArray(stats.applicationsByMonth) ? stats.applicationsByMonth.map(item => ({\n                month: String(item.month || ''),\n                count: Number(item.count || 0)\n              })) : [],\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StatusDistributionChart, {\n              data: isAdvisorStats(stats) && stats.applicationsByStatusChart ? stats.applicationsByStatusChart : formatStatusData(stats.applicationsByStatus),\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Distribuci\\xF3n por Monto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), hasExtendedData(stats) && stats.amountRanges && stats.amountRanges.length > 0 && /*#__PURE__*/_jsxDEV(AmountRangeChart, {\n              data: stats.amountRanges,\n              height: 300,\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), (user === null || user === void 0 ? void 0 : user.role) === USER_ROLES.SUPERADMIN && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Rendimiento de Asesores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), hasExtendedData(stats) && stats.mockAdvisorPerformance && stats.mockAdvisorPerformance.length > 0 && /*#__PURE__*/_jsxDEV(AdvisorPerformanceChart, {\n              data: stats.mockAdvisorPerformance,\n              height: 300,\n              title: \"\",\n              maxBars: 8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), isAdvisorStats(stats) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-base-100 shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-lg font-semibold\",\n              children: \"Resumen de Solicitudes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats stats-vertical shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-title\",\n                  children: \"Solicitudes Aprobadas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value text-success\",\n                  children: stats.approvedApplications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-title\",\n                  children: \"Solicitudes Rechazadas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value text-error\",\n                  children: stats.rejectedApplications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-title\",\n                  children: \"Solicitudes Pendientes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-value text-warning\",\n                  children: stats.pendingApplications\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card bg-base-100 shadow-md mt-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title text-lg font-semibold\",\n            children: \"Solicitudes Recientes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-zebra w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Cliente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Empresa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Monto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Estado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Fecha y Hora\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: stats.recentApplications && stats.recentApplications.length > 0 ? stats.recentApplications.map((app, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"hover cursor-pointer\",\n                  onClick: () => navigate(`/applications/${app.id}`),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: String(app.client_name || 'N/A')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: String(app.company_name || 'N/A')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: app.application_type === 'selected_plans' && app.product_type ? getApplicationTypeLabel(app.product_type) : getApplicationTypeLabel(app.application_type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatCurrency(Number(app.amount || 0))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `badge badge-${String(app.status) === 'approved' ? 'success' : String(app.status) === 'rejected' ? 'error' : String(app.status) === 'pending' ? 'warning' : String(app.status) === 'in_review' ? 'info' : 'ghost'}`,\n                      children: String(app.status || 'N/A')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: app.created_at ? formatDate(String(app.created_at), 'datetime') : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: 6,\n                    className: \"text-center\",\n                    children: \"No hay solicitudes recientes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"G7lW13UkB4evRmVoWTzwFAkaSvo=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ChartBarIcon","CurrencyDollarIcon","UserGroupIcon","ClipboardDocumentCheckIcon","useAuth","USER_ROLES","APPLICATION_TYPE_LABELS","formatCurrency","formatDate","MainLayout","MetricCard","StatusDistributionChart","MonthlyApplicationsChart","AmountRangeChart","AdvisorPerformanceChart","getGeneralDashboardStats","getAdvisorStats","getCompanyDashboardStats","getPendingApprovals","jsxDEV","_jsxDEV","Dashboard","_s","navigate","user","isLoading","setIsLoading","stats","setStats","error","setError","partialData","setPartialData","filters","setFilters","startDate","endDate","advisorId","companyId","pendingApproval","setPendingApproval","formatMetricValue","value","parseFloat","isAdvisorStats","obj","console","log","JSON","stringify","isCompanyStats","createFallbackGeneralStats","totalApplications","pendingApplications","approvedApplications","rejectedApplications","totalAmount","averageAmount","recentApplications","applicationsByStatus","applicationsByMonth","advisorPerformance","createFallbackAdvisorStats","advisorName","name","totalApproved","totalRejected","totalPending","totalClients","totalCompanies","conversionRate","avgTimeToApproval","createFallbackCompanyStats","avgAmount","totalAdvisors","avgApprovalTime","loadStats","dashboardStats","queryFilters","undefined","role","SUPERADMIN","ADVISOR","_dashboardStats","_dashboardStats2","_dashboardStats3","id","COMPANY_ADMIN","entityId","isPendingApprovals","pendingData","approvalError","handleFilterChange","newFilters","prev","getApplicationTypeLabel","type","hasExtendedData","applicationsByStatusType","Array","isArray","isApplicationStatusArray","data","length","formatStatusData","statusData","Object","entries","map","status","count","children","className","fileName","_jsxFileName","lineNumber","columnNumber","title","icon","color","previousValue","formatValue","isPercentage","Number","item","month","String","height","applicationsByStatusChart","amountRanges","mockAdvisorPerformance","maxBars","app","index","onClick","client_name","company_name","application_type","product_type","amount","created_at","colSpan","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ChartBarIcon, CurrencyDollarIcon, UserGroupIcon, ClipboardDocumentCheckIcon } from '@heroicons/react/24/outline';\nimport { useAuth } from '../contexts/AuthContext';\nimport { USER_ROLES } from '../utils/constants/roles';\nimport { APPLICATION_TYPE_LABELS } from '../utils/constants/applications';\nimport { DashboardStats, ApplicationStats, CompanyStats } from '../types/dashboard.types';\nimport { formatCurrency, formatDate } from '../utils/formatters';\n\n// Componentes de UI\nimport MainLayout from '../components/layout/MainLayout';\nimport MetricCard from '../components/ui/charts/MetricCard';\nimport StatusDistributionChart from '../components/ui/charts/StatusDistributionChart';\nimport MonthlyApplicationsChart from '../components/ui/charts/MonthlyApplicationsChart';\nimport AmountRangeChart from '../components/ui/charts/AmountRangeChart';\nimport AdvisorPerformanceChart from '../components/ui/charts/AdvisorPerformanceChart';\n\n// Servicios\nimport {\n  getGeneralDashboardStats,\n  getAdvisorStats,\n  getCompanyDashboardStats,\n  getPendingApprovals\n} from '../services/dashboardService';\n\n// Interfaces adicionales\ninterface AmountRange {\n  range: string;\n  count: number;\n}\n\ninterface AdvisorData {\n  advisor_name: string;\n  total_applications: number;\n  approved_applications?: number;\n}\n\n// Extender las interfaces para agregar propiedades opcionales para el dashboard\ninterface ExtendedStats {\n  applications?: { [key: string]: number };\n  previousMonthApproved?: number;\n  amountRanges?: AmountRange[];\n  mockAdvisorPerformance?: AdvisorData[];\n  totalClients?: number;\n  totalCompanies?: number;\n  totalAdvisors?: number;\n  conversionRate?: number;\n  pendingApproval?: number;\n  avgTimeToApproval?: number;\n  avgApprovalTime?: number;\n  totalPending?: number;\n  totalApproved?: number;\n  totalRejected?: number;\n  // Add any other extra fields needed\n}\n\n// Tipo combinado para stats con todas las propiedades posibles\ntype DashboardStatsType = (DashboardStats | ApplicationStats | CompanyStats) & Partial<ExtendedStats>;\n\nconst Dashboard: React.FC = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [stats, setStats] = useState<DashboardStatsType | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [partialData, setPartialData] = useState(false);\n  const [filters, setFilters] = useState({\n    startDate: '',\n    endDate: '',\n    advisorId: '',\n    companyId: '',\n  });\n  const [pendingApproval, setPendingApproval] = useState(0);\n\n  // Create a wrapper for formatCurrency that matches MetricCard's formatValue type\n  const formatMetricValue = (value: string | number): string => {\n    if (typeof value === 'string') {\n      return formatCurrency(parseFloat(value) || 0);\n    }\n    return formatCurrency(value || 0);\n  };\n\n  // Comprobar si el objeto es de tipo ApplicationStats\n  const isAdvisorStats = (obj: any): obj is ApplicationStats => {\n    console.log('Checking if stats is AdvisorStats:', JSON.stringify(obj));\n    return obj && 'advisorId' in obj && 'conversionRate' in obj;\n  };\n\n  // Comprobar si el objeto es de tipo CompanyStats\n  const isCompanyStats = (obj: any): obj is CompanyStats => {\n    console.log('Checking if stats is CompanyStats:', JSON.stringify(obj));\n    return obj && 'totalAdvisors' in obj && 'avgApprovalTime' in obj;\n  };\n\n  // Define the fallback functions before they're used in useEffect\n  // Crear datos de respaldo para estadísticas generales\n  const createFallbackGeneralStats = (): DashboardStats => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      averageAmount: 0,\n      recentApplications: [],\n      applicationsByStatus: {},\n      applicationsByMonth: [],\n      advisorPerformance: []\n    };\n  };\n\n  // Crear datos de respaldo para estadísticas de asesor\n  const createFallbackAdvisorStats = (advisorId: string): ApplicationStats => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      averageAmount: 0,\n      recentApplications: [],\n      advisorId: advisorId,\n      advisorName: user?.name || 'Asesor',\n      applicationsByMonth: [],\n      applicationsByStatus: {},\n      totalApproved: 0,\n      totalRejected: 0,\n      totalPending: 0,\n      pendingApproval: 0,\n      totalClients: 0,\n      totalCompanies: 0,\n      conversionRate: 0,\n      avgTimeToApproval: 0,\n      advisorPerformance: []\n    };\n  };\n\n  // Crear datos de respaldo para estadísticas de empresa\n  const createFallbackCompanyStats = (companyId: string): CompanyStats => {\n    return {\n      totalApplications: 0,\n      pendingApplications: 0,\n      approvedApplications: 0,\n      rejectedApplications: 0,\n      totalAmount: 0,\n      avgAmount: 0,\n      recentApplications: [],\n      totalClients: 0,\n      totalAdvisors: 0,\n      avgApprovalTime: 0,\n      applicationsByStatus: [],\n      applicationsByMonth: [],\n      advisorPerformance: []\n    };\n  };\n\n  // Función para cargar estadísticas basadas en el rol\n  const loadStats = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Loading dashboard stats...');\n      console.log('Current user:', user);\n\n      if (!user) {\n        console.log('No user found, returning early');\n        setIsLoading(false);\n        return;\n      }\n\n      let dashboardStats: DashboardStatsType | null = null;\n\n      // Definir filtros para la consulta\n      const queryFilters = {\n        startDate: filters.startDate || undefined,\n        endDate: filters.endDate || undefined,\n        advisorId: filters.advisorId || undefined,\n        companyId: filters.companyId || undefined,\n      };\n      \n      console.log('Using query filters:', queryFilters);\n\n      if (user.role === USER_ROLES.SUPERADMIN) {\n        console.log('Loading stats for SUPERADMIN');\n        dashboardStats = await getGeneralDashboardStats(queryFilters);\n      } else if (user.role === USER_ROLES.ADVISOR) {\n        console.log('Loading stats for ADVISOR with ID:', user.id);\n        dashboardStats = await getAdvisorStats(user.id, queryFilters);\n        console.log('ADVISOR stats loaded:', {\n          totalApplications: dashboardStats?.totalApplications,\n          approvedApplications: dashboardStats?.approvedApplications,\n          applicationsByStatus: dashboardStats?.applicationsByStatus\n        });\n      } else if (user.role === USER_ROLES.COMPANY_ADMIN) {\n        console.log('Loading stats for COMPANY_ADMIN with entity ID:', user.entityId);\n        \n        if (user.entityId) {\n          // Si el usuario es administrador de empresa, cargar estadísticas de la empresa\n          dashboardStats = await getCompanyDashboardStats(user.entityId, queryFilters);\n        } else {\n          console.error('Company admin user has no entityId (company_id)');\n        }\n      }\n\n      console.log('Received dashboard stats:', dashboardStats);\n      \n      if (dashboardStats && 'applicationsByStatus' in dashboardStats) {\n        console.log('Applications by status:', dashboardStats.applicationsByStatus);\n      }\n      \n      if (dashboardStats && 'applicationsByMonth' in dashboardStats) {\n        console.log('Applications by month:', dashboardStats.applicationsByMonth);\n      }\n\n      // Obtener información de aprobaciones pendientes\n      try {\n        const isPendingApprovals = user.role === USER_ROLES.ADVISOR || user.role === USER_ROLES.COMPANY_ADMIN;\n        \n        if (isPendingApprovals && user.id) {\n          console.log('Fetching pending approvals for user:', user.id, 'isCompanyAdmin:', user.role === USER_ROLES.COMPANY_ADMIN);\n          const pendingData = await getPendingApprovals(\n            user.role === USER_ROLES.COMPANY_ADMIN ? (user.entityId || user.id) : user.id,\n            user.role === USER_ROLES.COMPANY_ADMIN\n          );\n          \n          console.log('Pending approvals data:', pendingData);\n          setPendingApproval(pendingData.totalPending);\n        }\n      } catch (approvalError) {\n        console.error('Error fetching pending approvals:', approvalError);\n      }\n\n      setStats(dashboardStats);\n    } catch (error) {\n      console.error('Error loading dashboard stats:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadStats();\n  }, [user, filters]);\n\n  // Manejadores para los filtros\n  const handleFilterChange = (newFilters: any) => {\n    setFilters(prev => ({\n      ...prev,\n      ...newFilters\n    }));\n  };\n\n  // Utility function to get application type label\n  const getApplicationTypeLabel = (type: string): string => {\n    return APPLICATION_TYPE_LABELS[type as keyof typeof APPLICATION_TYPE_LABELS] || type;\n  };\n\n  // Check if stats has the amountRanges and mockAdvisorPerformance properties\n  const hasExtendedData = (stats: any): stats is DashboardStatsType & { amountRanges: AmountRange[], mockAdvisorPerformance: AdvisorData[] } => {\n    return 'amountRanges' in stats && 'mockAdvisorPerformance' in stats;\n  };\n\n  // Add debug logging for dashboard rendering\n  useEffect(() => {\n    if (stats) {\n      console.log('Dashboard rendering with stats:', {\n        totalApplications: stats.totalApplications,\n        pendingApplications: stats.pendingApplications,\n        approvedApplications: stats.approvedApplications,\n        rejectedApplications: stats.rejectedApplications,\n        applicationsByStatus: stats.applicationsByStatus,\n        applicationsByStatusType: Array.isArray(stats.applicationsByStatus) ? 'array' : typeof stats.applicationsByStatus\n      });\n    }\n  }, [stats]);\n\n  // Utility to check if applicationsByStatus is in array format (CompanyStats)\n  // or object format (ApplicationStats/DashboardStats)\n  const isApplicationStatusArray = (data: any): data is Array<{status: string; count: number}> => {\n    return Array.isArray(data) && data.length > 0 && 'status' in data[0] && 'count' in data[0];\n  };\n  \n  const formatStatusData = (statusData: any): Array<{status: string; count: number}> => {\n    if (isApplicationStatusArray(statusData)) {\n      return statusData;\n    } else if (statusData && typeof statusData === 'object' && !Array.isArray(statusData)) {\n      return Object.entries(statusData).map(([status, count]) => ({\n        status,\n        count: typeof count === 'number' ? count : 0\n      }));\n    }\n    return [];\n  };\n\n  // Si está cargando, mostrar indicador\n  if (isLoading) {\n    console.log('Dashboard is in loading state');\n    return (\n      <MainLayout>\n        <div className=\"flex justify-center items-center h-full p-8\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"loading loading-spinner loading-lg\"></span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si hay error, mostrar mensaje\n  if (error) {\n    console.log('Dashboard has error:', error);\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-error\">\n            <span>{error}</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si no hay datos, mostrar mensaje\n  if (!stats) {\n    console.log('Dashboard has no stats data');\n    return (\n      <MainLayout>\n        <div className=\"p-8\">\n          <div className=\"alert alert-info\">\n            <span>No hay datos disponibles para mostrar en el dashboard.</span>\n          </div>\n        </div>\n      </MainLayout>\n    );\n  }\n\n  // Si es asesor, mostrar sus métricas específicas\n  if (isAdvisorStats(stats)) {\n    console.log('Rendering advisor dashboard with data:', {\n      totalApplications: stats.totalApplications,\n      approvedApplications: stats.approvedApplications,\n      applicationsByStatus: stats.applicationsByStatus\n    });\n  }\n\n  return (\n    <MainLayout>\n      <div className=\"p-6 space-y-6\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Dashboard</h1>\n\n        {partialData && (\n          <div className=\"alert alert-warning mb-4\">\n            <span>Algunos datos no pudieron cargarse completamente. Se muestran datos parciales o de ejemplo.</span>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert alert-error mb-4\">\n            <span>{error}</span>\n          </div>\n        )}\n\n        {/* Tarjetas de métricas principales - Always show regardless of value */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total de Solicitudes\"\n            value={stats.totalApplications}\n            icon={<ChartBarIcon className=\"h-5 w-5\" />}\n            color=\"blue\"\n          />\n          <MetricCard\n            title=\"Solicitudes Aprobadas\"\n            value={isAdvisorStats(stats) ? stats.approvedApplications : stats.approvedApplications}\n            previousValue={0}\n            icon={<ClipboardDocumentCheckIcon className=\"h-5 w-5\" />}\n            color=\"green\"\n          />\n          <MetricCard\n            title=\"Monto Promedio\"\n            value={isCompanyStats(stats) ? stats.avgAmount : stats.averageAmount}\n            formatValue={formatMetricValue}\n            icon={<CurrencyDollarIcon className=\"h-5 w-5\" />}\n            color=\"indigo\"\n          />\n          {isAdvisorStats(stats) ? (\n            <MetricCard\n              title=\"Tasa de Conversión\"\n              value={stats.conversionRate}\n              isPercentage={true}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          ) : (\n            <MetricCard\n              title=\"Total de Clientes\"\n              value={'totalClients' in stats && stats.totalClients !== undefined ? Number(stats.totalClients) : 0}\n              icon={<UserGroupIcon className=\"h-5 w-5\" />}\n              color=\"purple\"\n            />\n          )}\n        </div>\n\n        {/* Gráficos principales - Always show regardless of data */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Solicitudes por Mes</h2>\n              {stats.applicationsByMonth && (\n                <MonthlyApplicationsChart\n                  data={Array.isArray(stats.applicationsByMonth) ? stats.applicationsByMonth.map((item: any) => ({\n                    month: String(item.month || ''),\n                    count: Number(item.count || 0)\n                  })) : []}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Estado</h2>\n              <StatusDistributionChart\n                data={isAdvisorStats(stats) && stats.applicationsByStatusChart \n                  ? stats.applicationsByStatusChart\n                  : formatStatusData(stats.applicationsByStatus)}\n                height={300}\n                title=\"\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Gráficos secundarios */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-4\">\n          <div className=\"card bg-base-100 shadow-md\">\n            <div className=\"card-body\">\n              <h2 className=\"card-title text-lg font-semibold\">Distribución por Monto</h2>\n              {hasExtendedData(stats) && stats.amountRanges && stats.amountRanges.length > 0 && (\n                <AmountRangeChart\n                  data={stats.amountRanges}\n                  height={300}\n                  title=\"\"\n                />\n              )}\n            </div>\n          </div>\n\n          {/* Rendimiento de asesores (solo para superadmin) */}\n          {user?.role === USER_ROLES.SUPERADMIN && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Rendimiento de Asesores</h2>\n                {hasExtendedData(stats) && stats.mockAdvisorPerformance && stats.mockAdvisorPerformance.length > 0 && (\n                  <AdvisorPerformanceChart\n                    data={stats.mockAdvisorPerformance}\n                    height={300}\n                    title=\"\"\n                    maxBars={8}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Mostrar información adicional para asesores */}\n          {isAdvisorStats(stats) && (\n            <div className=\"card bg-base-100 shadow-md\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title text-lg font-semibold\">Resumen de Solicitudes</h2>\n                <div className=\"stats stats-vertical shadow\">\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Aprobadas</div>\n                    <div className=\"stat-value text-success\">{stats.approvedApplications}</div>\n                  </div>\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Rechazadas</div>\n                    <div className=\"stat-value text-error\">{stats.rejectedApplications}</div>\n                  </div>\n                  <div className=\"stat\">\n                    <div className=\"stat-title\">Solicitudes Pendientes</div>\n                    <div className=\"stat-value text-warning\">{stats.pendingApplications}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Tabla de solicitudes recientes */}\n        <div className=\"card bg-base-100 shadow-md mt-6\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title text-lg font-semibold\">Solicitudes Recientes</h2>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"table table-zebra w-full\">\n                <thead>\n                  <tr>\n                    <th>Cliente</th>\n                    <th>Empresa</th>\n                    <th>Tipo</th>\n                    <th>Monto</th>\n                    <th>Estado</th>\n                    <th>Fecha y Hora</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats.recentApplications && stats.recentApplications.length > 0 ? (\n                    stats.recentApplications.map((app: any, index: number) => (\n                      <tr key={index} \n                          className=\"hover cursor-pointer\"\n                          onClick={() => navigate(`/applications/${app.id}`)}>\n                        <td>{String(app.client_name || 'N/A')}</td>\n                        <td>{String(app.company_name || 'N/A')}</td>\n                        <td>\n                          {app.application_type === 'selected_plans' && app.product_type\n                            ? getApplicationTypeLabel(app.product_type)\n                            : getApplicationTypeLabel(app.application_type)}\n                        </td>\n                        <td>{formatCurrency(Number(app.amount || 0))}</td>\n                        <td>\n                          <span className={`badge badge-${String(app.status) === 'approved' ? 'success' : \n                                                           String(app.status) === 'rejected' ? 'error' : \n                                                           String(app.status) === 'pending' ? 'warning' : \n                                                           String(app.status) === 'in_review' ? 'info' : 'ghost'}`}>\n                            {String(app.status || 'N/A')}\n                          </span>\n                        </td>\n                        <td>{app.created_at ? formatDate(String(app.created_at), 'datetime') : 'N/A'}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={6} className=\"text-center\">No hay solicitudes recientes</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}