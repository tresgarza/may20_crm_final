{"ast":null,"code":"var _jsxFileName = \"/Users/diegogg98/NEW CRM MAR18/src/components/HealthCheck.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthCheck = () => {\n  _s();\n  const [supabaseConnected, setSupabaseConnected] = useState(null);\n  const [mcpConnected, setMcpConnected] = useState(null);\n  const [checking, setChecking] = useState(true);\n  const [retries, setRetries] = useState(0);\n  const [errorDetails, setErrorDetails] = useState({});\n  const checkSupabaseConnection = async () => {\n    try {\n      // Intentionally use a simple query that doesn't require special permissions\n      const {\n        data,\n        error\n      } = await supabase.from('users').select('count', {\n        count: 'exact',\n        head: true\n      });\n      console.log('Supabase connection check:', {\n        data,\n        error\n      });\n      setSupabaseConnected(!error);\n      if (error) {\n        setErrorDetails(prev => ({\n          ...prev,\n          supabase: error.message\n        }));\n      }\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : String(e);\n      console.error('Supabase connection error:', e);\n      setSupabaseConnected(false);\n      setErrorDetails(prev => ({\n        ...prev,\n        supabase: errorMessage\n      }));\n    }\n  };\n  const checkMcpConnection = async () => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // Increased timeout to 10 seconds\n\n      console.log('Checking MCP connection at http://localhost:3100/health');\n      const response = await fetch('http://localhost:3100/health', {\n        method: 'GET',\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const responseText = await response.text();\n        console.error('MCP server responded with error:', response.status, responseText);\n        setMcpConnected(false);\n        setErrorDetails(prev => ({\n          ...prev,\n          mcp: `Status ${response.status}: ${responseText.substring(0, 100)}${responseText.length > 100 ? '...' : ''}`\n        }));\n        return;\n      }\n      const responseData = await response.json();\n      console.log('MCP server response:', responseData);\n      setMcpConnected(true);\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : String(e);\n      console.warn('MCP server connection error:', e);\n      setMcpConnected(false);\n      setErrorDetails(prev => ({\n        ...prev,\n        mcp: errorMessage\n      }));\n    }\n  };\n  useEffect(() => {\n    const runChecks = async () => {\n      setChecking(true);\n      await Promise.all([checkSupabaseConnection(), checkMcpConnection()]);\n      setChecking(false);\n    };\n    runChecks();\n\n    // Retry if not connected, with exponential backoff\n    const interval = setInterval(() => {\n      if ((!supabaseConnected || !mcpConnected) && retries < 5) {\n        console.log(`Retrying connections (attempt ${retries + 1}/5)...`);\n        runChecks();\n        setRetries(prev => prev + 1);\n      } else {\n        clearInterval(interval);\n      }\n    }, Math.min(5000 + retries * 5000, 30000)); // Start at 5s, max 30s\n\n    return () => clearInterval(interval);\n  }, [supabaseConnected, mcpConnected, retries]);\n  if (checking && retries === 0) {\n    return null; // Don't show on first check\n  }\n  if (supabaseConnected && mcpConnected) {\n    return null; // All connections are good\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded shadow-lg z-50 max-w-md\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-1\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"fill-current h-6 w-6 text-red-500 mr-4\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 20 20\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 142\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: \"Problemas de conectividad detectados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mt-2 list-disc list-inside text-sm\",\n          children: [supabaseConnected === false && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-2\",\n            children: [\"No se pudo conectar a Supabase. Verifica tu conexi\\xF3n a internet.\", errorDetails.supabase && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 pl-5 text-xs font-mono bg-red-50 p-1 rounded\",\n              children: [\"Error: \", errorDetails.supabase]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), mcpConnected === false && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-2\",\n            children: [\"No se pudo conectar al servidor MCP en el puerto 3100.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 mb-1\",\n              children: \"Ejecuta uno de estos comandos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-50 p-2 rounded text-xs font-mono mb-2 overflow-x-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-1\",\n                children: \"npm run mcp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"npx -y @supabase/mcp-server-supabase@latest --access-token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczOTk5MjQwNiwiZXhwIjoyMDU1NTY4NDA2fQ.TwhEGW9DK4DTQQRquT6Z9UW8T8UjLX-hp9uKdRjWAhs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), errorDetails.mcp && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-1 pl-5 text-xs font-mono bg-red-50 p-1 rounded\",\n              children: [\"Error: \", errorDetails.mcp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mt-2\",\n            children: [\"Intentando reconectar... (\", retries, \" intentos)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthCheck, \"JeRX6YCc53gIiRhnDQ8iU+Ks4vY=\");\n_c = HealthCheck;\nexport default HealthCheck;\nvar _c;\n$RefreshReg$(_c, \"HealthCheck\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","HealthCheck","_s","supabaseConnected","setSupabaseConnected","mcpConnected","setMcpConnected","checking","setChecking","retries","setRetries","errorDetails","setErrorDetails","checkSupabaseConnection","data","error","from","select","count","head","console","log","prev","message","e","errorMessage","Error","String","checkMcpConnection","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","signal","clearTimeout","ok","responseText","text","status","mcp","substring","length","responseData","json","warn","runChecks","Promise","all","interval","setInterval","clearInterval","Math","min","className","children","xmlns","viewBox","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/components/HealthCheck.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabaseClient';\n\nconst HealthCheck: React.FC = () => {\n  const [supabaseConnected, setSupabaseConnected] = useState<boolean | null>(null);\n  const [mcpConnected, setMcpConnected] = useState<boolean | null>(null);\n  const [checking, setChecking] = useState(true);\n  const [retries, setRetries] = useState(0);\n  const [errorDetails, setErrorDetails] = useState<{\n    supabase?: string;\n    mcp?: string;\n  }>({});\n\n  const checkSupabaseConnection = async () => {\n    try {\n      // Intentionally use a simple query that doesn't require special permissions\n      const { data, error } = await supabase.from('users').select('count', { count: 'exact', head: true });\n      console.log('Supabase connection check:', { data, error });\n      setSupabaseConnected(!error);\n      if (error) {\n        setErrorDetails(prev => ({ ...prev, supabase: error.message }));\n      }\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : String(e);\n      console.error('Supabase connection error:', e);\n      setSupabaseConnected(false);\n      setErrorDetails(prev => ({ ...prev, supabase: errorMessage }));\n    }\n  };\n\n  const checkMcpConnection = async () => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // Increased timeout to 10 seconds\n      \n      console.log('Checking MCP connection at http://localhost:3100/health');\n      const response = await fetch('http://localhost:3100/health', {\n        method: 'GET',\n        signal: controller.signal\n      });\n      \n      clearTimeout(timeoutId);\n      \n      if (!response.ok) {\n        const responseText = await response.text();\n        console.error('MCP server responded with error:', response.status, responseText);\n        setMcpConnected(false);\n        setErrorDetails(prev => ({ \n          ...prev, \n          mcp: `Status ${response.status}: ${responseText.substring(0, 100)}${responseText.length > 100 ? '...' : ''}` \n        }));\n        return;\n      }\n      \n      const responseData = await response.json();\n      console.log('MCP server response:', responseData);\n      \n      setMcpConnected(true);\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : String(e);\n      console.warn('MCP server connection error:', e);\n      setMcpConnected(false);\n      setErrorDetails(prev => ({ ...prev, mcp: errorMessage }));\n    }\n  };\n\n  useEffect(() => {\n    const runChecks = async () => {\n      setChecking(true);\n      await Promise.all([\n        checkSupabaseConnection(),\n        checkMcpConnection()\n      ]);\n      setChecking(false);\n    };\n\n    runChecks();\n\n    // Retry if not connected, with exponential backoff\n    const interval = setInterval(() => {\n      if ((!supabaseConnected || !mcpConnected) && retries < 5) {\n        console.log(`Retrying connections (attempt ${retries + 1}/5)...`);\n        runChecks();\n        setRetries(prev => prev + 1);\n      } else {\n        clearInterval(interval);\n      }\n    }, Math.min(5000 + retries * 5000, 30000)); // Start at 5s, max 30s\n\n    return () => clearInterval(interval);\n  }, [supabaseConnected, mcpConnected, retries]);\n\n  if (checking && retries === 0) {\n    return null; // Don't show on first check\n  }\n\n  if (supabaseConnected && mcpConnected) {\n    return null; // All connections are good\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded shadow-lg z-50 max-w-md\">\n      <div className=\"flex\">\n        <div className=\"py-1\"><svg className=\"fill-current h-6 w-6 text-red-500 mr-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z\"/></svg></div>\n        <div className=\"flex-1\">\n          <p className=\"font-bold\">Problemas de conectividad detectados</p>\n          <ul className=\"mt-2 list-disc list-inside text-sm\">\n            {supabaseConnected === false && (\n              <li className=\"mb-2\">\n                No se pudo conectar a Supabase. Verifica tu conexión a internet.\n                {errorDetails.supabase && (\n                  <div className=\"mt-1 pl-5 text-xs font-mono bg-red-50 p-1 rounded\">Error: {errorDetails.supabase}</div>\n                )}\n              </li>\n            )}\n            {mcpConnected === false && (\n              <li className=\"mb-2\">\n                No se pudo conectar al servidor MCP en el puerto 3100. \n                <div className=\"mt-1 mb-1\">Ejecuta uno de estos comandos:</div>\n                <div className=\"bg-red-50 p-2 rounded text-xs font-mono mb-2 overflow-x-auto\">\n                  <div className=\"mb-1\">npm run mcp</div>\n                  <div>npx -y @supabase/mcp-server-supabase@latest --access-token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczOTk5MjQwNiwiZXhwIjoyMDU1NTY4NDA2fQ.TwhEGW9DK4DTQQRquT6Z9UW8T8UjLX-hp9uKdRjWAhs</div>\n                </div>\n                {errorDetails.mcp && (\n                  <div className=\"mt-1 pl-5 text-xs font-mono bg-red-50 p-1 rounded\">Error: {errorDetails.mcp}</div>\n                )}\n              </li>\n            )}\n            <li className=\"mt-2\">\n              Intentando reconectar... ({retries} intentos)\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HealthCheck; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}