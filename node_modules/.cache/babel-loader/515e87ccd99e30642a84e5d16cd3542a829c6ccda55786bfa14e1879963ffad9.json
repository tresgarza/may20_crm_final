{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Import environment variables\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://ydnygntfkrleiseuciwq.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5OTI0MDYsImV4cCI6MjA1NTU2ODQwNn0.B-dH2Kptzz1oyM4ynno_GjlvjpxL-HbNKC_st4bgf0A';\nconst serviceRoleKey = process.env.REACT_APP_SUPABASE_SERVICE_ROLE_KEY || '';\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Get an authenticated client for the current user\nexport const getAuthenticatedClient = () => {\n  return supabase;\n};\n\n// Get a client with service role permissions for admin operations\nexport const getServiceClient = () => {\n  if (!serviceRoleKey) {\n    console.warn('Service role key not available, falling back to anon client');\n    return supabase;\n  }\n  return createClient(supabaseUrl, serviceRoleKey);\n};\n\n// Function to reinitialize the Supabase client (useful after authentication changes)\nexport const reinitializeSupabaseClient = () => {\n  return createClient(supabaseUrl, supabaseAnonKey);\n};\n\n// Helper function to create a real-time subscription to a table\nexport const createTableSubscription = (table, events, callback) => {\n  console.log(`Setting up real-time subscription for ${table}...`);\n  try {\n    const subscription = supabase.channel(`public:${table}`).on('postgres_changes', {\n      event: events,\n      schema: 'public',\n      table\n    }, payload => {\n      // Process the payload\n      console.log('Received real-time update:', payload);\n      callback(payload);\n    }).subscribe();\n\n    // Return cleanup function\n    return () => {\n      console.log(`Unsubscribing from ${table}...`);\n      subscription.unsubscribe();\n    };\n  } catch (error) {\n    console.error('Error setting up subscription:', error);\n    return () => {}; // Empty cleanup function\n  }\n};\n\n// Get storage bucket reference\nexport const getStorage = (bucket = 'documents') => {\n  return supabase.storage.from(bucket);\n};\n\n// Export default supabase client\nexport default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","serviceRoleKey","REACT_APP_SUPABASE_SERVICE_ROLE_KEY","supabase","getAuthenticatedClient","getServiceClient","console","warn","reinitializeSupabaseClient","createTableSubscription","table","events","callback","log","subscription","channel","on","event","schema","payload","subscribe","unsubscribe","error","getStorage","bucket","storage","from"],"sources":["/Users/diegogg98/NEW CRM MAR18/src/services/supabaseService.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Import environment variables\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://ydnygntfkrleiseuciwq.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlkbnlnbnRma3JsZWlzZXVjaXdxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5OTI0MDYsImV4cCI6MjA1NTU2ODQwNn0.B-dH2Kptzz1oyM4ynno_GjlvjpxL-HbNKC_st4bgf0A';\nconst serviceRoleKey = process.env.REACT_APP_SUPABASE_SERVICE_ROLE_KEY || '';\n\n// Create a single supabase client for interacting with your database\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Get an authenticated client for the current user\nexport const getAuthenticatedClient = () => {\n  return supabase;\n};\n\n// Get a client with service role permissions for admin operations\nexport const getServiceClient = () => {\n  if (!serviceRoleKey) {\n    console.warn('Service role key not available, falling back to anon client');\n    return supabase;\n  }\n  return createClient(supabaseUrl, serviceRoleKey);\n};\n\n// Function to reinitialize the Supabase client (useful after authentication changes)\nexport const reinitializeSupabaseClient = () => {\n  return createClient(supabaseUrl, supabaseAnonKey);\n};\n\n// Helper function to create a real-time subscription to a table\nexport const createTableSubscription = (table, events, callback) => {\n  console.log(`Setting up real-time subscription for ${table}...`);\n  \n  try {\n    const subscription = supabase\n      .channel(`public:${table}`)\n      .on('postgres_changes', { \n        event: events, \n        schema: 'public', \n        table \n      }, (payload) => {\n        // Process the payload\n        console.log('Received real-time update:', payload);\n        callback(payload);\n      })\n      .subscribe();\n    \n    // Return cleanup function\n    return () => {\n      console.log(`Unsubscribing from ${table}...`);\n      subscription.unsubscribe();\n    };\n  } catch (error) {\n    console.error('Error setting up subscription:', error);\n    return () => {}; // Empty cleanup function\n  }\n};\n\n// Get storage bucket reference\nexport const getStorage = (bucket = 'documents') => {\n  return supabase.storage.from(bucket);\n};\n\n// Export default supabase client\nexport default supabase; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,0CAA0C;AACpG,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,IAAI,kNAAkN;AACrR,MAAMC,cAAc,GAAGL,OAAO,CAACC,GAAG,CAACK,mCAAmC,IAAI,EAAE;;AAE5E;AACA,OAAO,MAAMC,QAAQ,GAAGT,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;;AAElE;AACA,OAAO,MAAMK,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,OAAOD,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EACpC,IAAI,CAACJ,cAAc,EAAE;IACnBK,OAAO,CAACC,IAAI,CAAC,6DAA6D,CAAC;IAC3E,OAAOJ,QAAQ;EACjB;EACA,OAAOT,YAAY,CAACC,WAAW,EAAEM,cAAc,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMO,0BAA0B,GAAGA,CAAA,KAAM;EAC9C,OAAOd,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;AACnD,CAAC;;AAED;AACA,OAAO,MAAMU,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EAClEN,OAAO,CAACO,GAAG,CAAC,yCAAyCH,KAAK,KAAK,CAAC;EAEhE,IAAI;IACF,MAAMI,YAAY,GAAGX,QAAQ,CAC1BY,OAAO,CAAC,UAAUL,KAAK,EAAE,CAAC,CAC1BM,EAAE,CAAC,kBAAkB,EAAE;MACtBC,KAAK,EAAEN,MAAM;MACbO,MAAM,EAAE,QAAQ;MAChBR;IACF,CAAC,EAAGS,OAAO,IAAK;MACd;MACAb,OAAO,CAACO,GAAG,CAAC,4BAA4B,EAAEM,OAAO,CAAC;MAClDP,QAAQ,CAACO,OAAO,CAAC;IACnB,CAAC,CAAC,CACDC,SAAS,CAAC,CAAC;;IAEd;IACA,OAAO,MAAM;MACXd,OAAO,CAACO,GAAG,CAAC,sBAAsBH,KAAK,KAAK,CAAC;MAC7CI,YAAY,CAACO,WAAW,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;EACnB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,MAAM,GAAG,WAAW,KAAK;EAClD,OAAOrB,QAAQ,CAACsB,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC;AACtC,CAAC;;AAED;AACA,eAAerB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}